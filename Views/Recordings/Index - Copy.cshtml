@model IEnumerable<CallBackUtility.Models.Recording>

<link href="~/Content/bootstrap-multiselect.css" rel="stylesheet" />
<link href="~/Content/bootstrap-datetimepicker.css" rel="stylesheet" />

<style>
    #dvMessagePopup, #dvMessageWindow, #dvConfirmMessage, #dvSaveGroup, #dvDeleteConfirmMessage, .dvDeleteConfirmMessage {
        background-color: #FFF !important;
        border-radius: 10px 10px 10px 10px !important;
        box-shadow: 0 0 25px 5px #999 !important;
        color: #111 !important;
        display: none;
        min-width: auto !important;
        min-height: auto !important;
        padding: 25px !important;
    }
    .btn-primary {
        color: black;
    }

    .tblCalls th, .tblCalls td {
        white-space: nowrap;
    }

    .tblCalls div.dataTables_wrapper {
        margin: 0 auto;
    }

    .tblCalls div.container {
        width: 80%;
    }

    div.dtfc-left-top-blocker, div.dtfc-right-top-blocker {
        background-color: transparent !important;
    }

    table.dataTable thead > tr > th.sorting:after, table.dataTable thead > tr > th.sorting_asc:after {
        content: "▼" / "";
    }

    table.dataTable thead > tr > th.sorting_asc:before,
    table.dataTable thead > tr > th.sorting:before {
        content: "▲" / "";
    }

    .collapsed {
        margin-right: 7px;
        height: 20px !important;
        width: 20px !important;
        background: url('../../Content/img/details_open.png') no-repeat left center !important;
        cursor: pointer !important;
    }

    .expanded {
        margin-right: 7px;
        height: 20px !important;
        width: 20px !important;
        background: url('../../Content/img/details_close.png') no-repeat left center !important;
        cursor: pointer !important;
    }
    /*.dataTables_scrollHeadInner {
        width: auto !important;
    }*/
    .popup {
        position: fixed;
        top: 50% !important;
        left: 50%;
        transform: translate(-50%, -50%);
    }

    .panel {
        margin-bottom: 20px;
        background-color: transparent;
    }

    .custom-processing-popup {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
        color: white;
        font-size: 20px;
        text-align: center;
        padding-top: 50vh; /* Vertically center the text */
        box-sizing: border-box;
        z-index: 9999; /* Ensure the popup appears above other content */
    }

    .btn-primary {
        border-color: transparent;
        background-color: transparent !important;
        font-size: 22px;
    }


    /* Modal Content */
    .modal-content {
        top: 50%;
        text-align: center;
        vertical-align: middle;
        color: white;
        background-color: transparent;
        margin: auto;
        padding: 20px;
        border: none;
        width: 80%;
    }



    /*
    .dataTables_scrollHeadInner, .dataTable {
        width: 100% !important;
    }*/

    .loader-txt
    p {
        font-size: 13px;
        color: #666;
    }

    small {
        font-size: 11.5px;
        color: #999;
    }

    .dt-buttons .dt-button {
        margin-left: 0px;
        margin-right: 0px;
    }

    #dvCallPlayer {
        margin-top: 8px;
    }
    /* td.details-control {
        background: url('../../Content/img/details_open.png') no-repeat left center !important;
        cursor: pointer;
    }

    tr.dt-hasChild td.details-control {
        background: url('../../Content/img/details_close.png') no-repeat left center !important;
    }*/
    button {
        border-style: hidden;
        border-radius: 23px;
        box-shadow: inset 8px 8px 8px #cbced1, inset -8px -8px 8px #fff;
    }
    /*
    .dataTables_wrapper {
        margin-bottom: 7px
    }*/

    audio::-webkit-media-controls-panel {
        color: yellow !important;
    }


    audio::-webkit-media-controls-play-button,
    audio::-webkit-media-controls-panel {
        background-color: lightgray;
        background-clip: border-box;
    }

    .bi-play {
        cursor: pointer;
        text-shadow: initial;
    }

    .bi-play-circle-fill {
        cursor: pointer;
        text-shadow: initial;
    }

    .bi-play-circle-fill {
        cursor: pointer;
        text-shadow: none;
    }

    .btnRecycle {
        margin-top: 2px;
        margin-right: 5px;
        float: right;
    }

    .dvPageCOntent {
        padding-left: 0px;
        padding-right: 0px;
    }

    .hh2-header-bar {
        font-family: auto !important;
        font-size: 22px !important;
        background: #eeeeee !important;
    }

        .hh2-header-bar > div > h2 {
            font-size: 22px !important;
            color: #8702a8 !important;
        }

    .btnGreen {
        float: left;
    }

    .table {
        margin-bottom: 0px;
    }

    .table-striped {
        margin-left: 0px;
        overflow-x: visible;
    }

    .dataTables_scrollBody {
        background-color: lightgray !important;
    }

    #btnPrint {
        padding-left: 9px;
        padding-right: 9px;
    }

    .txtDatetime {
        z-index: 1 !important;
    }
</style>
@section Scripts {
    <script src="~/Content/Scripts/bootstrap-datetimepicker.min.js"></script>
    <script src="~/Content/Scripts/bootstrap-multiselect.js"></script>
    <script src="~/Content/Scripts/bpopup.js"></script>
    <script>
        var totalcount = 0;
        var neRows = '';
        var audio = document.getElementById('callAudio');
        var _datatable;
        var _pagedUrl = "/Ajax/_Index";
        var collapsedGroups = {};
        $(document).ready(function () {
            loadMultiselects('ddlCallType');
            $('#dvCallPlayer').slideUp();
            var currentDate = new Date();
            var startDatePicker = $('#starttime').datetimepicker({
                defaultDate: new Date(currentDate.getFullYear(),
                    currentDate.getMonth() - 1,
                    currentDate.getDate()),
                maxDate: new Date(currentDate.getFullYear(),
                    currentDate.getMonth(),
                    currentDate.getDate()),
                'ignoreReadonly': true,
                icons: {
                    up: 'fa fa-arrow-up',
                    down: 'fa fa-arrow-down'
                },
                showClose: true,
                format: 'DD/MM/YYYY hh:mm A'
            }).on('dp.hide', function (selected) {
                //var startDate = new Date(selected.date);
                //  alert('change');
                // var endDate = new Date($('#endtime input').val());
                resetTable(selected, 'endtime');
                // $('#tblCDRdata_processing').hide();
            });

            var endDatePicker = $('#endtime').datetimepicker({
                defaultDate: new Date(currentDate.getFullYear(),
                    currentDate.getMonth(),
                    currentDate.getDate(), '11', '59') + "PM"
                , maxDate: new Date(currentDate.getFullYear(),
                    currentDate.getMonth(),
                    currentDate.getDate(), '11', '59') + "PM",               
                icons: {
                    up: 'fa fa-arrow-up',
                    down: 'fa fa-arrow-down'
                },
                showClose: true,
                ignoreReadonly: true,
                format: 'DD/MM/YYYY hh:mm A'
            }).on('dp.hide', function (selected) {
                resetTable(selected,'starttime');
            });
          
            $('.dataTables_wrapper').slideDown();
            $('.modal-backdrop').appendTo('.dvPageCOntent');

            $(document.body).on('click', '.btnParent', function () {
                $('#tblCDRdata_processing').show();
                setTimeout(detailControlClick($(this)), 1000);
            });            
            initTable();
        });

        function resetTable(selected, txtBoxId) {
            var days = isDifferenceGreaterThanOneMonth($('#starttime input').val(), $('#endtime input').val());
            //alert(days);

            //if (days >= 0 && days <= 31) {
            //    initTable();
            //} else {
                //if (days < 0) {
                //    showmyPopWindow("Invalid range selection. Please try again!", "0");
                //} else {
                //    showmyPopWindow("Datetime range cannot exceed one month. Please try again!", "0");
            //}
            if (!(days >= 0 && days <= 31)) {


                var selectedDate = new Date(selected.date);
                if (txtBoxId == "starttime") {
                    var _date = new Date(selectedDate.setDate(selectedDate.getDate() - 31));
                    $('#' + txtBoxId + ' input').val(('0' + _date.getDate()).slice(-2) + '/' + ('0' + (_date.getMonth() + 1)).slice(-2) + '/' + _date.getFullYear() + ' 12:00 AM');
                } else {
                    var _date = new Date(selectedDate.setDate(selectedDate.getDate() + 31));
                    //   var _date = new Date(selectedDate.setDate(selectedDate.getDate() + 31)) < new Date() ? new Date(selectedDate.setDate(selectedDate.getDate() + 31)) : new Date();
                    $('#' + txtBoxId + ' input').val(('0' + _date.getDate()).slice(-2) + '/' + ('0' + (_date.getMonth() + 1)).slice(-2) + '/' + _date.getFullYear() + ' 11:59 PM');
                }
            }
            initTable();
           // }
        }

        function showmyPopWindow(textMessage, message_type) {
            $('#dvMessagePopup').bPopup({
                appendTo: 'body'
                , modalClose: true
                , content: 'iframe'
                , contentContainer: '.content3'
                , follow: [false, false]
                , transitionClose: false
                , zIndex: 9997
                , onOpen: function () {
                    $('.content3').html(textMessage);
                    if (message_type == "0") {
                        if ($('.content3').hasClass("textGreenInColor")) {
                            $('.content3').removeClass("textGreenInColor");
                            $('.content3').addClass("lblRed");
                        } else { $('.content3').addClass("lblRed"); }
                    } else {
                        if ($('.content3').hasClass("lblRed")) {
                            $('.content3').removeClass("lblRed");
                            $('.content3').addClass("textGreenInColor");
                        } else { $('.content3').addClass("textGreenInColor"); }
                    }
                },
                onClose: function () {
                    $('.content3').empty();
                }
                , autoClose: 3000
            });
        }

        function isDifferenceGreaterThanOneMonth(date1Str, date2Str) {
            // Parse the date strings into moment objects
            var date1 = moment(date1Str, 'DD/MM/YYYY hh:mm A');
            var date2 = moment(date2Str, 'DD/MM/YYYY hh:mm A');
            var formattedDate1 = date1.format('MM/DD/YYYY hh:mm A');
            var formattedDate2 = date2.format('MM/DD/YYYY hh:mm A');
            let _date1 = new Date(formattedDate1);
            let _date2 = new Date(formattedDate2);
            // Calculate the difference in months
            var differenceInMonths = _date2.getTime() - _date1.getTime(); // 'true' for floating point result
            // Check if the difference is greater than one month
            return Math.round
                (differenceInMonths / (1000 * 3600 * 24));;
        }

        function detailControlClick(_this) {
            var isShow = true;
            if (_this.hasClass('collapsed')) {
                _this.removeClass('collapsed').addClass('expanded');
                isShow = true;
            } else {
                if (_this.parents('tr').next().hasClass('child')) {
                    _this.parents('tr').next('tr.child').remove();
                }
                _this.addClass('collapsed').removeClass('expanded');
                isShow = false;
            }
            $(".dataTable tr.details-control .expanded").each(function (e) {
                if ($(this).attr('id') != _this.attr('id')) {
                    $(this).addClass('collapsed').removeClass('expanded');
                    if ($(this).parents('tr').next().hasClass('child')) {
                        $(this).parents('tr').next('tr.child').remove();
                    }
                }
            });

            if (isShow) {
                var recording = JSON.stringify({ recordingId: _this.attr('id'), callid: _this.attr('callid'), year: _this.attr('year')});
                $.ajax({
                    url: '/Recordings/getChildRecordings',
                    type: 'POST',
                    data: recording,
                    contentType: 'application/json; charset=utf-8',
                    success: function (json) {
                        if (json) {
                            if (json.count > 0) {
                                var childRowsHtml = '<tr class="child"><td colspan="11"><table class="table" >';
                                var recordings = json.recording;
                                for (var i = 0; i < recordings.length; i++) {
                                    childRowsHtml = childRowsHtml + '<tr  ><td><button inum="' + recordings[i].inum + '"  tarid="' + recordings[i].tarid + '"  onclick="playsAudio(this)"><i class="fa fa-play call" ></i></button></td><td>' + recordings[i].startdayname + '</td><td>' + recordings[i]._startdate + '</td><td>' +
                                        toHHMMSS (recordings[i].duration) + '</td><td>' + recordings[i].callingparty + '</td><td>' + recordings[i].calledparty + '</td><td>' + recordings[i].agentname + '</td><td>' + recordings[i].callid + '</td><td>' + recordings[i].skill + '</td><td>' + recordings[i].services + '</td><td>' + callType(recordings[i].dirn) + '</td></tr>';
                                }
                                if (_this.parents('tr').next('tr.child').length > 0) {
                                    _this.parents('tr').next('tr.child').remove();
                                }
                                _this.parents('tr').after(childRowsHtml + '</table></td></tr>');
                            }
                        }
                        $('#tblCDRdata_processing').hide();
                    }
                });
            }
            $('#tblCDRdata_processing').hide();
        }

        function initTable() {
            if (_datatable != undefined) {
                _datatable.ajax.reload();
            }
            else {
                _datatable = $('#tblCDRdata').DataTable({
                    dom: '<"top"i>Bfrt<"bottom"lp><"clear">',
                    scrollCollapse: true,
                    scrollX: true,
                    scrollY: 900,
                    // columnDefs: [{ width: '20%', targets: 0 }],
                    fixedColumns: true,
                    // deferRender: true,
                    // fixedHeader: true,
                    //autoWidth: true,
                    // responsive: true,
                    retrieve: true,
                    Filter: true,
                    processing: true,
                    serverSide: true,
                    stateSave: true,
                    order: [[2, "asc"]],
                    language: {
                        processing: '<tbody style="color:white !important;font-weight:bold;" class=" custom-processing-popup modal-dialog-centered"><tr style="width:100%;"><td style="width:100%;  margin: 0 auto; " class="popup " colspan="10">Processing...</td></tr></tbody>'
                    },
                    buttons: [
                        {
                            extend: 'print',
                            className: ' btnMeezan btnHide',
                            exportOptions: {
                                modifier: {
                                    search: 'applied',
                                    order: 'applied'
                                }
                            }
                        }, {
                            extend: "pdfHtml5",
                            text: 'PDF',
                            messageTop: function () { return new Date().toString() },
                            className: ' btnRed  btnHide',
                            orientation: 'landscape',
                            pageSize: 'LEGAL',
                            exportOptions: {
                                modifier: {
                                    search: 'applied',
                                    order: 'applied'
                                }
                            }
                        }, {
                            extend: 'excel',
                            text: 'Export To Excel',
                            className: ' btnBlue btnHide',
                            exportOptions: {
                                modifier: {
                                    search: 'applied',
                                    order: 'applied'
                                }
                            }
                        }
                        , {
                            action: function (e, dt, node, config) {
                                _datatable.ajax.reload();
                            },
                            text: 'Search',
                            className: ' btnGreen searchbutton btnHide'
                        }
                    ],
                    lengthMenu: [
                        [50, 100, 200, 300, 400, 500, 1000],
                        ['50', '100', '200', '300', '400', '500', '1000']
                    ],
                    createdRow: function (row, data, index) {
                        if (data.sessionsCount > 1) {
                            $(row).addClass('details-control');
                            $(row).find('td:eq(0)').find('div').prepend('<div class="btnParent collapsed" style="float:left;" id="' + data.RecordId + '" callid="' + data.callid + '" year="' + data._year + '"></div>');
                        }
                    },
                    ajax: {
                        "type": "POST",
                        "url": _pagedUrl,
                        data: function (d) {
                            d.ringstarttime = $('#starttime input').val();
                            d.ringendtime = $('#endtime input').val();
                            d.gcallId = $('#txtGCallId').val();
                            d.dailedNos = $('#txtDailedNo').val();
                            d.calltypes = $('#ddlCallType').val();
                            d.callingNos = $('#txtCallingNo').val();
                            return d;
                        },
                        "dataSrc": function (json) {
                            if (json.recordsTotal > 0) {
                                $('.btnHide').slideDown();
                                _data = json.data;
                            } else {
                                json.data = [];
                                $('.btnHide').slideUp();
                            }
                            return json.data;
                        }
                    },
                    columns: [
                        {
                            data: null, orderable: false, visible: true, render: function (data) {
                                if (data.sessionsCount > 1) {
                                    return ' <div style="display: inline-flex;float:right;"  callid="' + data.callid + '" id="' + data.RecordId + '" > <button style="float:right;" year="' + data._year + '" callid="' + data.callid + '" onclick="playAudios(this)"><i class="fa fa-play call" ></i></button></div > '
                                } else {
                                    return '<div style="display: inline-flex;float:right;"><button inum="' + data.inum + '" style="float:right;" tarid="' + data.tarid + '"  onclick="playsAudio(this);"><i class="fa fa-play call" ></i></button></div>'
                                }
                            }
                        }
                        , { data: 'startdayname', orderable: true, visible: true }
                        , { data: '_startdate', orderable: true, visible: true }
                        , {
                            "data": 't_duration',
                            "render": function (data) {
                                return (toHHMMSS(data));
                            }, orderable: true, visible: true
                        }
                        , { data: 'callingparty', orderable: true, visible: true }
                        , { data: 'calledparty', orderable: true, visible: true }
                        , { data: 'agentname', orderable: true, visible: true }
                        , { data: 'callid', orderable: true, visible: true }
                        , { data: 'skill', orderable: true, visible: true }
                        , { data: 'services', orderable: true, visible: true }
                        , {
                            "data": 'dirn',
                            "render": function (data) {
                                return (callType(data));
                            }, orderable: true, visible: true
                        }
                    ]
                });
            }
        }

        function callType(dirn) {
            return dirn == 2 ? 'Inbound' : 'Outbound';
        }

        function toHHMMSS(value) {
           
            //alert(value);
            var sec_num = Math.round(value); // don't forget the second param
            var hours = Math.floor(sec_num / 3600);
            var minutes = Math.floor((sec_num - (hours * 3600)) / 60);
            var seconds = sec_num - (hours * 3600) - (minutes * 60);
            if (hours < 10) { hours = "0" + hours; }
            if (minutes < 10) { minutes = "0" + minutes; }
            if (seconds < 10) { seconds = "0" + seconds; }
            return hours + ':' + minutes + ':' + seconds;
        }

        function playsAudio(object) {
            var recording = JSON.stringify({ tarid: object.attributes['tarid'].value, inum: object.attributes['inum'].value });
            $('#tblCDRdata_processing').show();
            setTimeout(_playAudio(recording), 500);
        }
        
        function _playAudio(recording) {
            $.ajax({
                url: '/Recordings/getChildRecording',
                type: 'POST',
                data: recording,
                contentType: 'application/json; charset=utf-8',
                success: function (json) {
                    if (json) {
                        $('#dvCallPlayer').slideDown();
                        audio.src = json.filepath;
                        audio.play();
                        audio.addEventListener('ended', function () {
                            audio.pause();
                        });
                    }
                    $('#tblCDRdata_processing').hide();
                }
            });
        }

        function playAudios(_this) {   
            $('#tblCDRdata_processing').show();
            var recording = JSON.stringify({ callid: _this.attributes['callid'].value, year: _this.attributes['year'].value });
            $.ajax({
                url: '/Recordings/getRecordings',
                type: 'POST',
                data: recording,
                contentType: 'application/json; charset=utf-8',
                success: function (json) {
                    if (json) {
                        if (json.filepath && json.filepath.length > 0) {
                            var lstsongNames = json.filepath;
                            audio.src = lstsongNames[0];
                            var curPlaying = 0;
                            audio.addEventListener('ended', function () {
                                if (audio.src.indexOf(lstsongNames[lstsongNames.length - 1]) == -1) {
                                    audio.src = audio.src.replace(lstsongNames[curPlaying], lstsongNames[++curPlaying]);
                                    audio.play();
                                } else {
                                    audio.pause();
                                }
                            });
                            $('#dvCallPlayer').slideDown();
                        }
                        $('#tblCDRdata_processing').hide();
                    }
                }
            });           
        }

        function loadMultiselects(elementId) {
            if ($('#' + elementId + '')) {
                $('#' + elementId + '').multiselect({
                    maxHeight: 200,
                    buttonWidth: '93%',
                    includeSelectAllOption: true,
                    onChange: function () {
                        var selected = this.$select.val() + ',' + $('#' + elementId + '').attr('options'); 
                        if (this.$select.val()) {
                            $('#' + elementId + '').attr('options', selected);
                        }
                    },
                    buttonText: function (options, select) {
                        var numberOfOptions = $(this).children('option').length;
                        if (options.length === 0) {
                            return 'None Selected';
                        }
                        else {
                            if (options.length > 0) {
                                if (options.length === numberOfOptions) {
                                    return 'All Selected';
                                } else {
                                    return options.length + ' selected';
                                }
                            } else {
                                var selected = '';
                                options.each(function () {
                                    var label = ($(this).attr('label') !== undefined) ? $(this).attr('label') : $(this).html();
                                    selected += label + ', ';
                                });
                                return selected.substr(0, selected.length - 2);
                            }
                        }
                    }
                });
                $('#' + elementId + '').focus();
                $('#' + elementId + '').multiselect('selectAll', false);
                $('#' + elementId + '').multiselect('updateButtonText');
            }
        }
    </script>
    @*<script src="~/scripts/jquery.signalR-2.4.3.min.js"></script>
        <script src="~/signalr/hubs" type="text/javascript"></script>
        <script src="~/scripts/_Hub.js"></script>*@
}
<div class="pagetitle">
    <h1>Replay Calls</h1>
</div>
<hr />
<div class="col-md-12 dvPageCOntent">
    <div class="panel panel-default">
        <div class="panel-heading">
            <div class="dataTables_wrapper form-inline">
                <div class="row">
                    <div class="col-sm-4 dataTables_length">
                        <label class="col-sm-3" style="top:8px;padding-left:0px;padding-right:3px;text-align:right;">
                            Calling No.
                        </label>
                        <div class="col-sm-9">
                            <input type="text" id="txtCallingNo" class="form-control text-box single-line" value="" />
                            @*<select id="ddlCallingNos" style="width: 240px;" class=" form-control  multiple" multiple="multiple"></select>*@
                        </div>
                    </div>
                    <div class="col-sm-4 dataTables_length">
                        <label class="col-sm-3" style="top: 8px; padding-left: 0px; padding-right: 3px; text-align: right;">
                            Call Id
                        </label>
                        <div class="col-sm-9">
                            @*<select id="ddlInums" style="width: 240px;" class=" form-control  multiple" multiple="multiple"></select>*@
                            <input type="text" id="txtGCallId" class="form-control text-box single-line" value="" />
                        </div>
                    </div>
                    <div class="col-sm-4 dataTables_length">
                        <label class="col-sm-4" for="startdate" style="top: 8px; padding-left: 0px;  text-align: right; "> Call Start Time </label>
                        <div class='col-sm-8 dataTables_length input-group date' id='starttime'>
                            <input id="startdate" type='text' class="txtDatetime form-control" readonly />
                            <span class="input-group-addon">
                                <span class="glyphicon glyphicon-calendar"></span>
                            </span>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-4 dataTables_length">
                        <label class="col-sm-3" style="top:9px;padding-left:0px;padding-right:0px;text-align:right;">
                            Direction
                        </label>
                        <div class="col-sm-7" style="padding-right:0px;">
                            <select id="ddlCallType" aria-controls="dataTables-example" class="form-control  " multiple="multiple">
                                <option value="2" selected>Inbound</option>
                                <option value="1">Outbound</option>
                                <option value="3">Undefined</option>
                            </select>
                        </div>
                    </div>
                    <div class="col-sm-4 dataTables_length">
                        <label class="col-sm-3" style="top:9px;padding-left:0px;padding-right:0px;text-align:right;">
                            Extension
                        </label>
                        <div class="col-sm-9">
                            <input type="text" id="txtDailedNo" class="form-control text-box single-line" value="" />
                        </div>
                    </div>
                    <div class="col-sm-4 dataTables_length">
                        <label class="col-sm-4" for="enddate" style="top: 8px; padding-left: 0px; text-align: right; "> Call End Time </label><div class='col-sm-8 dataTables_length input-group date' id='endtime'>
                            <input type='text' id="enddate" class="txtDatetime form-control" readonly />
                            <span class="input-group-addon">
                                <span class="glyphicon glyphicon-calendar"></span>
                            </span>
                        </div>
                    </div>
                </div>
            </div>
            <div id="dvCallPlayer" class="row">
                @{string downloadoption = User.IsInRole(AppRoles.CALLSLISTENERONLY) ? "controlsList = nodownload" : "";}
                <audio controls @downloadoption autoplay id="callAudio" src="#">
                </audio>
            </div>
        </div>
        <div class="panel-body" style="padding-top:0px;">
            <div class="table-wrapper">
                <table class="table table-striped table-bordered table-hover tblBlack tblCalls" id="tblCDRdata" style="width:100%">
                    <thead>
                        <tr>
                            <th>Play Calls</th>
                            <th>Day</th>
                            <th>Date</th>
                            <th>Duration</th>
                            <th>Calling No.</th>
                            @*<th>Inum</th>*@
                            <th>Extension</th>
                            <th>Agent Login Ids</th>
                            @*<th>Call Id</th>*@
                            <th>Call Id</th>
                            <th>Skill</th>
                            <th>Service</th>
                            <th>Direction</th>
                            @*<th>SessionCount</th>*@
                        </tr>
                    </thead>
                </table>
            </div>
        </div>
    </div>
</div> <div id="dvMessagePopup">
    <div class="content3">
    </div>
</div>